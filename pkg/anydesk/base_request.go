package anydesk

import (
	"bytes"
	"crypto/sha1"
	"encoding/base64"
	"fmt"
	"net/http"
	"strings"
)

type ApiRequest interface {
	GetHttpRequest(api *Api) (req *http.Request, err error)
}

type BaseRequest struct {
	Method    string
	Resource  string
	Timestamp int64
	Content   []byte
}

// GetContentHash generates the content hash required for the API request string generated by GetRequestString().
func (r *BaseRequest) GetContentHash() string {
	h := sha1.New()
	h.Write(r.Content)

	return base64.StdEncoding.EncodeToString(h.Sum(nil))
}

// GetRequestString generates the request string required for the API token generated by GetRequestToken().
func (r *BaseRequest) GetRequestString() string {
	return fmt.Sprintf("%s\n%s\n%d\n%s", strings.ToUpper(r.Method), r.Resource, r.Timestamp, r.GetContentHash())
}

func (r *BaseRequest) GetHttpRequest(api *Api) (req *http.Request, err error) {
	endpoint := fmt.Sprintf("%s%s", api.ApiEndpoint, r.Resource)

	req, err = http.NewRequest(r.Method, endpoint, bytes.NewBuffer(r.Content))
	if err != nil {
		return
	}

	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("Authorization", fmt.Sprintf("AD %s:%d:%s", api.LicenseId, r.Timestamp, api.GetRequestToken(r)))

	return
}
